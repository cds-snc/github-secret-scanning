name: "Terraform plan production"

on:
  pull_request:
    branches:
      - main
    paths:
      - "terragrunt/**"
      - ".github/workflows/tf_plan_production.yml"

env:
  TERRAFORM_VERSION: 1.3.8
  TERRAGRUNT_VERSION: 0.43.2
  AWS_REGION: ca-central-1
  TF_VAR_api_config: ${{ secrets.API_CONFIG }}
  TF_VAR_cloudfront_header: ${{ secrets.CLOUDFRONT_HEADER }}
  TF_VAR_log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
  TF_VAR_log_analytics_workspace_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}
  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
  TF_VAR_notify_doc_api_key: ${{ secrets.NOTIFY_DOC_API_KEY }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: alarms
          - module: api
          - module: cloudfront
          - module: hosted_zone
          - module: alert_compromise 

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@f24d7193d98baebaeacc7e2227925dd47cc267f5 # v4.2.0
        with:
          role-to-assume: arn:aws:iam::283582579564:role/github-secret-scanning-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@e710cb1446e5dfe69a0182603fb06b5282d7eb07 # v3.4.3
        with:
          comment-delete: true
          comment-title: "Production: ${{ matrix.module }}"
          directory: ./terragrunt/env/production/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
