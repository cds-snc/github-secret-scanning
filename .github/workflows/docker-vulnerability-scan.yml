name: Docker vulnerability scan

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

env:
  REGISTRY: 283582579564.dkr.ecr.ca-central-1.amazonaws.com/github-secret-scanning
  AWS_REGION: ca-central-1

permissions:
  id-token: write
  security-events: write

jobs:
  docker-vulnerability-scan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - api

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@4fc4975a852c8cd99761e2de1f4ba73402e44dd9 # v4.0.3
        with:
          role-to-assume: arn:aws:iam::283582579564:role/github-secret-scanning-plan
          role-session-name: ECRPull
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Docker vulnerability scan
        uses: cds-snc/security-tools/.github/actions/docker-scan@34794baf2af592913bb5b51d8df4f8d0acc49b6f # v3.2.0
        env:
          TRIVY_DB_REPOSITORY: ${{ vars.TRIVY_DB_REPOSITORY }}
        with:
          docker_image: "${{ env.REGISTRY }}/${{ matrix.image }}:latest"
          dockerfile_path: "${{ matrix.image }}/Dockerfile"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
